# Python3 数字(Number)
# Python 数字数据类型用于存储数值。
# 数据类型是不允许改变的,这就意味着如果改变数字数据类型的值，将重新分配内存空间
# 以下实例在变量赋值时 Number 对象将被创建：
var1 = 1
var2 = 10

# 您也可以使用del语句删除一些数字对象的引用。
# del语句的语法是
# del var1[,var2[,var3[....,varN]]]

# 您可以通过使用del语句删除单个或多个对象的引用，例如：
# del var
# del var_a, var_b

# Python 支持三种不同的数值类型：
# 整型(Int) - 通常被称为是整型或整数，是正或负整数，不带小数点。Python3 整型是没有限制大小的，可以当作 Long 类型使用，所以 Python3 没有 Python2 的 Long 类型。
# 浮点型(float) - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250）
# 复数( (complex)) - 复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。
# 我们可以使用十六进制和八进制来代表整数：
# int	    float	     complex
# 10	     0.0	         3.14j
# 100	    15.20	        45.j
# -786	    -21.9	        9.322e-36j
# 080	     32.3e+18	   .876j
# -0490      -90.	       -.6545+0J
# -0x260	 -32.54e100	    3e+26J
# 0x69	      70.2E-12	     4.53e-7j

# Python支持复数，复数由实数部分和虚数部分构成，
# 可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。

# Python 数字类型转换
# 有时候，我们需要对数据内置的类型进行转换，数据类型的转换，
# 你只需要将数据类型作为函数名即可。
# int(x) 将x转换为一个整数。
# float(x) 将x转换到一个浮点数。
# complex(x) 将x转换到一个复数，实数部分为 x，虚数部分为 0。
# complex(x, y) 将 x 和 y 转换到一个复数，实数部分为 x，
# 虚数部分为 y。x 和 y 是数字表达式。
# 以下实例将浮点数变量 a 转换为整数：
a=1.0
int(a)

# Python 数字运算
# Python 解释器可以作为一个简单的计算器，
# 您可以在解释器里输入一个表达式，
# 它将输出表达式的值。
# 表达式的语法很直白： +, -, * 和 /,
# 和其它语言（如Pascal或C）里一样。